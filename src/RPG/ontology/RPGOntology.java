// file: RPGOntology.java generated by ontology bean generator.  DO NOT EDIT, UNLESS YOU ARE REALLY SURE WHAT YOU ARE DOING!
package RPG.ontology;

import jade.content.onto.*;
import jade.content.schema.*;

/** file: RPGOntology.java
 * @author ontology bean generator
 * @version 2022/05/28, 12:55:16
 */
public class RPGOntology extends jade.content.onto.Ontology  {

  private static final long serialVersionUID = 1915207981401516286L;

  //NAME
  public static final String ONTOLOGY_NAME = "RPG";
  // The singleton instance of this ontology
  private static Ontology theInstance = new RPGOntology();
  public static Ontology getInstance() {
     return theInstance;
  }


   // VOCABULARY
    public static final String COMBATACTION_ATTACKACTION="AttackAction";
    public static final String COMBATACTION_ACTIONTYPE="ActionType";
    public static final String COMBATACTION="CombatAction";
    public static final String MOVEACTION_DIRECTION="Direction";
    public static final String MOVEACTION="MoveAction";
    public static final String GAMEACTION_WANTTOLEAVE="WantToLeave";
    public static final String GAMEACTION_WANTTOJOIN="WantToJoin";
    public static final String GAMEACTION="GameAction";
    public static final String ATTACK_DAMAGE="Damage";
    public static final String ATTACK_ACCURACY="Accuracy";
    public static final String ATTACK="Attack";

  /**
   * Constructor
  */
  private RPGOntology(){ 
    super(ONTOLOGY_NAME, BasicOntology.getInstance());
    try { 

    // adding Concept(s)
    ConceptSchema attackSchema = new ConceptSchema(ATTACK);
    add(attackSchema, RPG.ontology.Attack.class);

    // adding AgentAction(s)

    // adding AID(s)

    // adding Predicate(s)
    PredicateSchema gameActionSchema = new PredicateSchema(GAMEACTION);
    add(gameActionSchema, RPG.ontology.GameAction.class);
    PredicateSchema moveActionSchema = new PredicateSchema(MOVEACTION);
    add(moveActionSchema, RPG.ontology.MoveAction.class);
    PredicateSchema combatActionSchema = new PredicateSchema(COMBATACTION);
    add(combatActionSchema, RPG.ontology.CombatAction.class);


    // adding fields
    attackSchema.add(ATTACK_ACCURACY, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    attackSchema.add(ATTACK_DAMAGE, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.MANDATORY);
    gameActionSchema.add(GAMEACTION_WANTTOJOIN, (TermSchema)getSchema(BasicOntology.BOOLEAN), ObjectSchema.MANDATORY);
    gameActionSchema.add(GAMEACTION_WANTTOLEAVE, (TermSchema)getSchema(BasicOntology.BOOLEAN), ObjectSchema.MANDATORY);
    moveActionSchema.add(MOVEACTION_DIRECTION, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    combatActionSchema.add(COMBATACTION_ACTIONTYPE, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    combatActionSchema.add(COMBATACTION_ATTACKACTION, attackSchema, ObjectSchema.OPTIONAL);

    // adding name mappings

    // adding inheritance

   }catch (java.lang.Exception e) {e.printStackTrace();}
  }
}
